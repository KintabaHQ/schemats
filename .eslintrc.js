module.exports = {
  extends: [
    "airbnb",
    "prettier",
    "prettier/@typescript-eslint",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
  ],
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  parser: "@typescript-eslint/parser",
  parserOptions: {
    project: "tsconfig.json",
    sourceType: "module",
  },
  overrides: [
    {
      files: ["*.ts"],
    },
  ],
  plugins: ["@typescript-eslint", "import"],
  rules: {
    "@typescript-eslint/class-name-casing": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/type-annotation-spacing": "off",
    "@typescript-eslint/array-type": "warn",
    "no-duplicate-imports": "error",
    "no-return-await": "off",
    "no-restricted-syntax": "off",
    "no-console": ["warn", { allow: ["warn", "error", "info"] }],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
      },
    ],
    "arrow-parens": ["off", "as-needed"],
    curly: ["error", "multi-line"],
    "guard-for-in": "off",
    "no-else-return": "error",
    "eol-last": "off",
    "no-param-reassign": "error",
    "spaced-comment": "error",
    "linebreak-style": "off",
    "new-parens": "off",
    "no-case-declarations": "off",
    "newline-per-chained-call": "off",
    "no-eval": "error",
    "import/no-cycle": "off",
    "no-extra-semi": "off",
    "no-fallthrough": "error",
    "no-irregular-whitespace": "off",
    "no-multiple-empty-lines": "off",
    "no-new-wrappers": "error",
    "no-var": "error",
    "no-undef": "off",
    "object-shorthand": "error",
    "one-var": "error",
    "prefer-const": "error",
    "prefer-template": "error",
    "quote-props": "off",
    "no-plusplus": "error",
    "no-1onsole": "off",
    // results in too many false positives:
    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "object-shorthand": "error",
    "no-array-constructor": "error",
    radix: "error",
    "space-before-function-paren": "off",
    "no-underscore-dangle": "off",
    "prefer-arrow-callback": "error",
    eqeqeq: ["error", "smart"],
    "@typescript-eslint/camelcase": "off",
    camelcase: "off",
    "new-cap": "off",
    "no-empty": ["error", { allowEmptyCatch: true }],
    // Does not properly handle some cases in typescript
    "consistent-return": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      { allowTernary: true, allowShortCircuit: true },
    ],
    "no-unused-expressions": "off",
    "import/prefer-default-export": "off",
    "default-case": "off",
    "dot-notation": "off",
    "no-useless-constructor": "off",
    "max-classes-per-file": "off",
    "no-empty-function": "off",
    "no-cond-assign": ["error", "except-parens"],
    // This doesn't cover exhaustion for typescript enums correctly.
    "array-callback-return": "off",
    "class-methods-use-this": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-use-before-define": "warn",
    "no-use-before-define": "off",
    "no-restricted-globals": "off",
    "import/no-named-as-default": "off",
    "import/extensions": "off",
    "no-param-reassign": "warn",
  },
};
